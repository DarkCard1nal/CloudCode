version: '3.9'

services:
  server:
    # Production (release) mode: minimum set of mounts,
    # all data (e.g. uploads) is stored in volume.
    image: card1nal/cloud_code_server:latest
    ports:
      - "5000:5000"
    volumes:
      - uploads:/uploads
      - /var/run/docker.sock:/var/run/docker.sock
      - ./Tasks:/app/Tasks
    environment:
      - DEBUG_MODE=false
      - WATCH_MODE=false

  develop:
    # Development mode: debugging is enabled, source files are mounted,
    # so that changes are immediately reflected without rebuilding the container.
    image: card1nal/cloud_code_server:latest
    ports:
      - "5000:5000"
    volumes:
      - uploads:/uploads
      - /var/run/docker.sock:/var/run/docker.sock
      - ./Tasks:/app/Tasks
    environment:
      - DEBUG_MODE=true
      - WATCH_MODE=true
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    profiles:
      - develop
      
  # Basic configuration for all test services
  test-base: &test-base
    image: card1nal/cloud_code_server:latest
    working_dir: /app
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - uploads:/uploads
      - /var/run/docker.sock:/var/run/docker.sock
      - ./Tasks:/app/Tasks
    environment:
      - APP_DEBUG=true
      - PYTHONPATH=/app
      - DEBUG_MODE=true
    depends_on:
      - server
    profiles:
      - testing
      
  # Running all tests
  tests:
    <<: *test-base
    command:
          - /bin/bash
          - -eo
          - pipefail
          - -c
          - |
            echo "--- running unit tests ---"
            python Tests/unit/run_unit_tests.py
            echo "--- running integration tests ---"
            python -m unittest discover -s Tests/integration
            echo "--- running behave tests ---"
            behave Tests/features

  # Running only behave tests
  tests-behave:
    <<: *test-base
    command: ["behave", "/Tests/features"]
    
  # Running only unit tests
  tests-unit:
    <<: *test-base
    command: ["python", "/Tests/unit/run_unit_tests.py"]
    
  # Running only integration tests
  tests-integration:
    <<: *test-base
    command: ["python", "-m", "unittest", "discover", "-s", "/Tests/integration"]

volumes:
  uploads:
    name: cloudcode_uploads